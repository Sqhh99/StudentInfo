"""
Django settings for StudentInfo project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-pnjvtrw%u%eu^15ey(oa&vqnj$e3#xyxo*#2m@@c!*8m9ohj#s'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "students.apps.StudentsConfig",
    "users.apps.UsersConfig",
    "student_portal.apps.StudentPortalConfig",  # 学生门户应用
    "captcha",  # 添加验证码应用
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'users.middleware.SessionManagementMiddleware',  # 会话管理中间件
    'students.middleware.AuthRequiredMiddleware',  # 认证授权中间件
]

ROOT_URLCONF = 'StudentInfo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'StudentInfo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "StudentInfo",
        'USER': "root",
        'PASSWORD': "200400",
        'HOST': "127.0.0.1",
        'PORT': "3306",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# 添加静态文件目录配置
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'students/static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

AUTH_USER_MODEL = 'users.User'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 安全设置
SESSION_COOKIE_SECURE = False  # 在生产环境中设置为True
CSRF_COOKIE_SECURE = False  # 在生产环境中设置为True
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'
CSRF_COOKIE_HTTPONLY = True  # 防止JavaScript访问CSRF cookie
CSRF_COOKIE_SAMESITE = 'Lax'  # 限制跨站请求
SESSION_COOKIE_SAMESITE = 'Lax'  # 限制跨站请求

# 登录设置
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/login/'
# 未授权访问重定向
LOGIN_URL_REDIRECT = '/unauthorized/'

# 日志配置
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {asctime} {message}',
            'style': '{',
        },
        'auth_format': {
            'format': '{levelname} {asctime} {message} {ip} {user_agent}',
            'style': '{',
        },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/django.log'),
            'formatter': 'verbose',
        },
        'auth_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/auth.log'),
            'formatter': 'auth_format',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'filters': ['require_debug_false'],
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['mail_admins', 'file'],
            'level': 'ERROR',
            'propagate': False,
        },
        'auth': {
            'handlers': ['auth_file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
        'captcha': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
        'users': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

# Redis配置
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://113.46.159.182:6379',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'CONNECTION_POOL_KWARGS': {'max_connections': 100},
            'PASSWORD': '2932897504xu',  # 如果有密码，请在此设置
            'SOCKET_CONNECT_TIMEOUT': 5,  # 连接超时时间（秒）
            'SOCKET_TIMEOUT': 5,  # 读取超时时间（秒）
            'COMPRESSOR': 'django_redis.compressors.zlib.ZlibCompressor',  # 启用压缩
            'IGNORE_EXCEPTIONS': True,  # 忽略Redis连接异常
        },
        'KEY_PREFIX': 'studentinfo'  # 键前缀，避免多应用冲突
    }
}

# 使用Redis存储session
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
SESSION_CACHE_ALIAS = 'default'
SESSION_COOKIE_NAME = 'studentinfo_sessionid'  # 自定义会话Cookie名称
SESSION_COOKIE_AGE = 1209600  # 2周，单位秒
SESSION_SAVE_EVERY_REQUEST = True  # 每次请求都保存会话
SESSION_COOKIE_HTTPONLY = True  # 防止JavaScript访问会话cookie
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # 关闭浏览器时不过期，由SESSION_COOKIE_AGE控制

# 会话回退设置 (如果Redis不可用)
SESSION_FALLBACK_ENGINE = 'django.contrib.sessions.backends.db'

# 验证码设置
CAPTCHA_LENGTH = 4  # 验证码长度
CAPTCHA_TIMEOUT = 5  # 验证码过期时间（分钟）
CAPTCHA_IMAGE_SIZE = (150, 50)  # 验证码图片尺寸
CAPTCHA_FONT_SIZE = 32  # 验证码字体大小
CAPTCHA_BACKGROUND_COLOR = '#ffffff'  # 验证码背景颜色
CAPTCHA_FOREGROUND_COLOR = '#001100'  # 验证码前景颜色
CAPTCHA_CHALLENGE_FUNCT = 'captcha.helpers.random_char_challenge'  # 验证码生成函数
CAPTCHA_NOISE_FUNCTIONS = ('captcha.helpers.noise_dots',)  # 验证码噪点
